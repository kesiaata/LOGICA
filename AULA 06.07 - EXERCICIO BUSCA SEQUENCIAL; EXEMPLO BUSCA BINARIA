						EXERCICIO DE FIXAÇÃO (ALGORITMO BUSCA SEQUENCIAL)

programa
{//Um supermercado possui 4 frutas em um estoque:morngo, banana, caju, amora. Crie um algoritmo que pergunte a um usuario qual fruta ele deseja comprar neste 
//supermercado. Caso o usuario escolha uma das frutas em estoque, avisá-lo que a fruta está disponivel. Caso contrário, emitir mensagem de fruta indisponivel.
//Duca: armazene os nomes das frutas em um array.

	inclua biblioteca Texto --> t
	cadeia frutas[] = {"morango", "banana", "caju", "amora"}, fruta
	inteiro pos
	
	funcao inicio()
	{
		escreva("Qual fruta deseja comprar? ")
		leia(fruta)
		fruta = t.caixa_baixa(fruta)
		pos = 0

		enquanto((pos < 3) e (frutas[pos] != fruta)){
			pos++
		}
		se(frutas[pos] == fruta){
			escreva("Fruta está disponivel!\n")
		}
		senao{
			escreva("Fruta indisponivel!!\n")
		}
	}
}


-------------------------------------------------------------------------------------------------------------------
					EXEMPLO DE ALGORITMO DE BUSCA BINARIA

programa
{
	
	inteiro cont, contA, contB
	inteiro aux
	inteiro vet[10]
	
	funcao inicio()
	{
		//Preenchendo o vetor
		para(cont = 0; cont < 10; cont++){
			escreva("Digite um número: ")
			leia(vet[cont])
		}

		//Ordenando vetor criado e preenchido
		para(contA = 0; contA < 10; contA++){
			para(contB = contA+1; contB < 10; contB++){
				se(vet[contA] > vet[contB]){
					aux = vet[contB]
					vet[contB] = vet[contA]
					vet[contA] = aux
				}
			}
		}
		//Verificar se realmente vetor está ordenado e execultar, depois de conferido, excluir do codigo
		para(cont = 0; cont < 10; cont++){
			escreva(vet[cont]+ " ")
		}
		//Algoritmo para pesquisa binaria
		inteiro inicial = 0
		inteiro final = 9
		inteiro meio, busca
		logico encontrado = falso

		escreva("\nDigite um valor à ser pesquisado no vetor: ")
		leia(busca)
		enquanto((inicial <= final) e (nao encontrado)){
			meio = (inicial + final) / 2
			se(vet[meio] == busca){
				encontrado = verdadeiro
			}
			senao se(vet[meio] > busca){
				final = meio - 1 }
			senao{
				inicial = meio + 1
			}
		}
		se(encontrado == verdadeiro){
			escreva("Valor encontrado no vetor.\n")
		}
		senao{
			escreva("Valor inexistente!!\n")
		}
	}
}

